{"timestamp":"2025-05-31T00:59:54.161751","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T00:59:54.162146","level":"info","event":"Filling up the DagBag from /home/airflow/dags/custom_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T00:59:54.538349Z","level":"error","event":"2025-05-31 00:59:54.538218: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T00:59:54.556867Z","level":"error","event":"2025-05-31 00:59:54.556732: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T00:59:54.556937Z","level":"error","event":"To enable the following instructions: AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.106234Z","level":"error","event":"2025-05-31 00:59:55.106154: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.246997Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247144Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247211Z","level":"info","event":"Current task name:train_model","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247266Z","level":"info","event":"Dag name:train_knn_model","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247314Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247362Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247408Z","level":"info","event":"Task:<Task(_PythonDecoratedOperator): train_model>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.247453Z","level":"info","event":"Failure caused by [Errno 2] No such file or directory: '/data/processed'","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T00:59:55.175971","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"FileNotFoundError","exc_value":"[Errno 2] No such file or directory: '/data/processed'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":838,"name":"run"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1130,"name":"_execute_task"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/bases/decorator.py","lineno":251,"name":"execute"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":216,"name":"execute"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":239,"name":"execute_callable"},{"filename":"/opt/venv_airflow/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/home/airflow/dags/custom_dag.py","lineno":17,"name":"train_model"},{"filename":"/home/airflow/dags/knn_model.py","lineno":28,"name":"train_and_export_knn"},{"filename":"/home/airflow/dags/knn_model.py","lineno":12,"name":"load_feature_vectors"}]}]}
